<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
  <display-name>Bigdata</display-name>
  <description>Bigdata</description>
  <context-param>
  	<!-- Note: This path is relative to the directory in which you start -->
  	<!-- the servlet container. -->
  	<param-name>propertyFile</param-name>
  	<!-- Note: This path may be used with WebAppUnassembled for testing.
  	<param-value>bigdata-war/src/resources/RWStore.properties</param-value>
  	 -->
  	<param-value>../webapps/bigdata/RWStore.properties</param-value>
  	<description>The property file (for a standalone database instance) or the
  	jini configuration file (for a federation).  The file MUST end with either
  	".properties" or ".config".  This path is relative to the directory from
  	which you start the servlet container so you may have to edit it for your
  	installation, e.g., by specifying an absolution path.  Also, it is a good
  	idea to review the RWStore.properties file as well and specify the location
  	of the database file on which it will persist your data.
  	
  	Note: You MAY override this parameter using
  	"-Dcom.bigdata.rdf.sail.webapp.ConfigParams.propertyFile=FILE"
  	when starting the servlet container.
  	</description>
  </context-param>
  <context-param>
  	<param-name>namespace</param-name>
  	<param-value>kb</param-value>
  	<description>The default bigdata namespace of for the triple or quad store
  	instance to be exposed.</description>
  </context-param>
  <context-param>
  	<param-name>create</param-name>
  	<param-value>true</param-value>
  	<description>When true a new triple or quads store instance will be created
  	if none is found at that namespace.</description>
  </context-param>
  <context-param>
  	<param-name>queryThreadPoolSize</param-name>
  	<param-value>16</param-value>
  	<description>The size of the thread pool used to service SPARQL queries -OR-
    ZERO (0) for an unbounded thread pool.</description>
  </context-param>
  <context-param>
   <param-name>readOnly</param-name>
   <param-value>false</param-value>
   <description>When true, the REST API will not permit mutation operations.</description>
  </context-param>
  <context-param>
   <param-name>queryTimeout</param-name>
   <param-value>0</param-value>
   <description>When non-zero, the timeout for queries (milliseconds).</description>
  </context-param>
  <listener>
   <listener-class>com.bigdata.rdf.sail.webapp.BigdataRDFServletContextListener</listener-class>
  </listener>
  <servlet>
  	<servlet-name>REST API</servlet-name>
  	<display-name>REST API</display-name>
  	<description>The REST API, including a SPARQL end point, as described at
  	https://sourceforge.net/apps/mediawiki/bigdata/index.php?title=NanoSparqlServer
  	</description>
  	<servlet-class>com.bigdata.rdf.sail.webapp.RESTServlet</servlet-class>
  	<load-on-startup>0</load-on-startup>
  </servlet>
  <servlet>
   <servlet-name>Multi-Tenancy API</servlet-name>
   <display-name>Multi-Tenancy API</display-name>
   <description>The REST API for managing multiple KBs in a single Journal
   or Fedetation.
   </description>
   <servlet-class>com.bigdata.rdf.sail.webapp.MultiTenancyServlet</servlet-class>
  </servlet>
  <servlet>
  	<servlet-name>Status</servlet-name>
  	<display-name>Status</display-name>
  	<description>A status page.</description>
  	<servlet-class>com.bigdata.rdf.sail.webapp.StatusServlet</servlet-class>
  </servlet>
  <servlet>
  	<servlet-name>Counters</servlet-name>
  	<display-name>Performance counters</display-name>
  	<description>Performance counters.</description>
  	<servlet-class>com.bigdata.rdf.sail.webapp.CountersServlet</servlet-class>
  </servlet>
  <!-- Mapping for the default KB namespace (as configured above). -->
  <servlet-mapping>
  <servlet-name>REST API</servlet-name>
  <url-pattern>/sparql</url-pattern>
  </servlet-mapping>
  <!-- Mapping for access to non-default KB namespaces.
  <servlet-mapping>
  <servlet-name>REST API</servlet-name>
  <url-pattern>/sparql/*</url-pattern> 
  </servlet-mapping> -->
  <!-- Mappings for the multi-tenancy API. -->
  <servlet-mapping>
  <servlet-name>Multi-Tenancy API</servlet-name>
  <url-pattern>/namespace</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  <servlet-name>Multi-Tenancy API</servlet-name>
  <url-pattern>/namespace/*</url-pattern>
  </servlet-mapping>
  <!-- Mapping for the status page. -->
  <servlet-mapping>
  <servlet-name>Status</servlet-name>
  <url-pattern>/status</url-pattern>
  </servlet-mapping>
  <!-- Mapping for the performance counters page. -->
  <servlet-mapping>
  <servlet-name>Counters</servlet-name>
  <url-pattern>/counters</url-pattern>
  </servlet-mapping>
</web-app>
