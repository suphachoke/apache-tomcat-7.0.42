/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2016-01-15 07:55:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Properties;
import edu.stanford.smi.protegex.owl.model.impl.DefaultRDFList;
import edu.stanford.smi.protegex.owl.model.RDFResource;
import edu.stanford.smi.protegex.owl.model.RDFSClass;
import java.util.ArrayList;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import semanticsimilarity.JavaOWL;
import java.text.SimpleDateFormat;
import java.util.Date;

public final class semantic_005fsearch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header2.html", Long.valueOf(1451371349223L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n");
      out.write("<HTML>\r\n");
      out.write("    <HEAD>\r\n");
      out.write("        <TITLE> New Document </TITLE>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\r\n");
      out.write("        <META NAME=\"Generator\" CONTENT=\"EditPlus\">\r\n");
      out.write("        <META NAME=\"Author\" CONTENT=\"\">\r\n");
      out.write("        <META NAME=\"Keywords\" CONTENT=\"\">\r\n");
      out.write("        <META NAME=\"Description\" CONTENT=\"\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"css-style1.css\"></link>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"style-header.css\"/>\r\n");
      out.write("        <!--[if IE]><link rel=\"stylesheet\" href=\"css-ie-style1.css\"></link><![endif]-->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"animation.css\"></link>\r\n");
      out.write("        <style type=\"text/css\">\r\n");
      out.write("            .objectproperty:hover {stroke-width:4;stroke:red;}\r\n");
      out.write("            .dataproperty:hover {fill:red;}\r\n");
      out.write("            .popup {border:1px solid blue;opacity:0.9;background-color:#afafea;border-radius:5pt;padding:5px;z-index:1;}\r\n");
      out.write("            #main_container {width:100%;clear:left;background-color: gray;}\r\n");
      out.write("            #main_container td{vertical-align: top; background-color: lightgray;}\r\n");
      out.write("            #onto {width:100%;background-color: #dedeef;overflow:auto;}\r\n");
      out.write("        </style>\r\n");
      out.write("        ");

            Properties props = new Properties();
            props.load(getServletContext().getResourceAsStream("WEB-INF/config.properties"));
            JavaOWL jowl = new JavaOWL(props.getProperty("common_ontology"), "http://202.28.94.50/ontologies/healthcare/hl7.owl#");
            ArrayList<RDFProperty> lst = jowl.getPropertiesOf("http://202.28.94.50/ontologies/healthcare/hl7.owl#Patient");
        
      out.write("\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("            var svgHeight = '");
      out.print(lst.size() * 20);
      out.write("';\r\n");
      out.write("            var ontoState = false;\r\n");
      out.write("\r\n");
      out.write("            function hidepopup() {\r\n");
      out.write("                var n = document.getElementById('popup');\r\n");
      out.write("                n.style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function showpopup(p, e) {\r\n");
      out.write("                var ev = window.event || e;\r\n");
      out.write("                var n = document.getElementById('popup');\r\n");
      out.write("                n.innerHTML = p.getAttribute('id');\r\n");
      out.write("                n.style.left = ev.clientX;\r\n");
      out.write("                n.style.top = ev.clientY + 20;\r\n");
      out.write("                n.style.display = 'block';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function showonto() {\r\n");
      out.write("                var n = document.getElementById('onto');\r\n");
      out.write("                if (!ontoState) {\r\n");
      out.write("                    n.style.height = svgHeight;\r\n");
      out.write("                } else {\r\n");
      out.write("                    n.style.height = '0';\r\n");
      out.write("                }\r\n");
      out.write("                ontoState = !ontoState;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function insertTextinput(tt) {\r\n");
      out.write("                var txt = tt.split('^^')[0];\r\n");
      out.write("                var o_txt = tt.split('^^')[1];\r\n");
      out.write("                var n = document.getElementById('searchform_table');\r\n");
      out.write("                var d = document.createElement('tr');\r\n");
      out.write("\r\n");
      out.write("                /*Join operation if there exist input before*/\r\n");
      out.write("                var td1 = document.createElement('td');\r\n");
      out.write("                if (n.getElementsByTagName('input').length > 0) {\r\n");
      out.write("                    var a = document.createElement('select');\r\n");
      out.write("                    a.setAttribute('name', txt + \"_join\");\r\n");
      out.write("                    var a_opt1 = document.createElement('option');\r\n");
      out.write("                    a_opt1.setAttribute('value', 'AND');\r\n");
      out.write("                    a_opt1.appendChild(document.createTextNode('AND'));\r\n");
      out.write("                    a.appendChild(a_opt1);\r\n");
      out.write("                    var a_opt2 = document.createElement('option');\r\n");
      out.write("                    a_opt2.setAttribute('value', 'OR');\r\n");
      out.write("                    a_opt2.appendChild(document.createTextNode('OR'));\r\n");
      out.write("                    a.appendChild(a_opt2);\r\n");
      out.write("                    td1.appendChild(a);\r\n");
      out.write("                }\r\n");
      out.write("                d.appendChild(td1);\r\n");
      out.write("\r\n");
      out.write("                /*create label*/\r\n");
      out.write("                var td2 = document.createElement('td');\r\n");
      out.write("                var s = document.createElement('span');\r\n");
      out.write("                var s_txt = document.createTextNode(txt);\r\n");
      out.write("                s.appendChild(s_txt);\r\n");
      out.write("                td2.appendChild(s);\r\n");
      out.write("                d.appendChild(td2);\r\n");
      out.write("\r\n");
      out.write("                /*Checking operation for matching from data type*/\r\n");
      out.write("                var td3 = document.createElement('td');\r\n");
      out.write("                if (o_txt.indexOf(\"{\") != -1) {\r\n");
      out.write("                    var o = document.createElement('select');\r\n");
      out.write("                    o.setAttribute('name', txt + '_operand');\r\n");
      out.write("                    var o_opt1 = document.createElement('option');\r\n");
      out.write("                    o_opt1.setAttribute('value', 'eq');\r\n");
      out.write("                    o_opt1.appendChild(document.createTextNode('equal'));\r\n");
      out.write("                    o.appendChild(o_opt1);\r\n");
      out.write("                    var o_opt2 = document.createElement('option');\r\n");
      out.write("                    o_opt2.setAttribute('value', 'ne');\r\n");
      out.write("                    o_opt2.appendChild(document.createTextNode('not equal'));\r\n");
      out.write("                    o.appendChild(o_opt2);\r\n");
      out.write("                    td3.appendChild(o);\r\n");
      out.write("                } else if (o_txt == 'string') {\r\n");
      out.write("                    var o = document.createElement('select');\r\n");
      out.write("                    o.setAttribute('name', txt + '_operand');\r\n");
      out.write("                    var o_opt3 = document.createElement('option');\r\n");
      out.write("                    o_opt3.setAttribute('value', 'regex');\r\n");
      out.write("                    o_opt3.appendChild(document.createTextNode('contain'));\r\n");
      out.write("                    o.appendChild(o_opt3);\r\n");
      out.write("                    var o_opt1 = document.createElement('option');\r\n");
      out.write("                    o_opt1.setAttribute('value', 'eq');\r\n");
      out.write("                    o_opt1.appendChild(document.createTextNode('equal'));\r\n");
      out.write("                    o.appendChild(o_opt1);\r\n");
      out.write("                    var o_opt2 = document.createElement('option');\r\n");
      out.write("                    o_opt2.setAttribute('value', 'ne');\r\n");
      out.write("                    o_opt2.appendChild(document.createTextNode('not equal'));\r\n");
      out.write("                    o.appendChild(o_opt2);\r\n");
      out.write("                    /*var o_opt4 = document.createElement('option');\r\n");
      out.write("                     o_opt4.setAttribute('value', '!=%');\r\n");
      out.write("                     o_opt4.appendChild(document.createTextNode('not contain'));\r\n");
      out.write("                     o.appendChild(o_opt4);*/\r\n");
      out.write("                    td3.appendChild(o);\r\n");
      out.write("                } else if (o_txt == 'int'|| o_txt == 'double') {\r\n");
      out.write("                    var o = document.createElement('select');\r\n");
      out.write("                    o.setAttribute('name', txt + '_operand');\r\n");
      out.write("                    var o_opt1 = document.createElement('option');\r\n");
      out.write("                    o_opt1.setAttribute('value', '==');\r\n");
      out.write("                    o_opt1.appendChild(document.createTextNode('Equal'));\r\n");
      out.write("                    o.appendChild(o_opt1);\r\n");
      out.write("                    var o_opt2 = document.createElement('option');\r\n");
      out.write("                    o_opt2.setAttribute('value', '!=');\r\n");
      out.write("                    o_opt2.appendChild(document.createTextNode('Not Equal'));\r\n");
      out.write("                    o.appendChild(o_opt2);\r\n");
      out.write("                    var o_opt3 = document.createElement('option');\r\n");
      out.write("                    o_opt3.setAttribute('value', '<=');\r\n");
      out.write("                    o_opt3.appendChild(document.createTextNode('Less than (Inclusive)'));\r\n");
      out.write("                    o.appendChild(o_opt3);\r\n");
      out.write("                    var o_opt4 = document.createElement('option');\r\n");
      out.write("                    o_opt4.setAttribute('value', '<');\r\n");
      out.write("                    o_opt4.appendChild(document.createTextNode('Less than (Exclusive)'));\r\n");
      out.write("                    o.appendChild(o_opt4);\r\n");
      out.write("                    var o_opt5 = document.createElement('option');\r\n");
      out.write("                    o_opt5.setAttribute('value', '>=');\r\n");
      out.write("                    o_opt5.appendChild(document.createTextNode('Greater than (Inclusive)'));\r\n");
      out.write("                    o.appendChild(o_opt5);\r\n");
      out.write("                    var o_opt6 = document.createElement('option');\r\n");
      out.write("                    o_opt6.setAttribute('value', '>');\r\n");
      out.write("                    o_opt6.appendChild(document.createTextNode('Greater than (Exclusive)'));\r\n");
      out.write("                    o.appendChild(o_opt6);\r\n");
      out.write("                    var o_opt7 = document.createElement('option');\r\n");
      out.write("                    o_opt7.setAttribute('value', '>=<');\r\n");
      out.write("                    o_opt7.appendChild(document.createTextNode('Between (Inclusive)'));\r\n");
      out.write("                    o.appendChild(o_opt7);\r\n");
      out.write("                    var o_opt8 = document.createElement('option');\r\n");
      out.write("                    o_opt8.setAttribute('value', '><');\r\n");
      out.write("                    o_opt8.appendChild(document.createTextNode('Between (Exclusive)'));\r\n");
      out.write("                    o.appendChild(o_opt8);\r\n");
      out.write("                    td3.appendChild(o);\r\n");
      out.write("                }\r\n");
      out.write("                d.appendChild(td3);\r\n");
      out.write("\r\n");
      out.write("                /*Data input field*/\r\n");
      out.write("                var td4 = document.createElement('td');\r\n");
      out.write("                if (o_txt.indexOf(\"{\") != -1) {\r\n");
      out.write("                    o_txt = o_txt.replace(/&quot;/g, \"\\\"\");\r\n");
      out.write("                    var json = JSON.parse(o_txt);\r\n");
      out.write("                    var input = document.createElement('select');\r\n");
      out.write("                    input.setAttribute('name', txt);\r\n");
      out.write("                    var opt0 = document.createElement('option');\r\n");
      out.write("                    opt0.setAttribute(\"value\", \"\");\r\n");
      out.write("                    opt0.appendChild(document.createTextNode(\"---\"));\r\n");
      out.write("                    input.appendChild(opt0);\r\n");
      out.write("                    for (var i = 0; i < json.enum.length; i++) {\r\n");
      out.write("                        var opt = document.createElement('option');\r\n");
      out.write("                        opt.setAttribute(\"value\", json.enum[i]);\r\n");
      out.write("                        opt.appendChild(document.createTextNode(json.enum[i]));\r\n");
      out.write("                        input.appendChild(opt);\r\n");
      out.write("                    }\r\n");
      out.write("                    td4.appendChild(input);\r\n");
      out.write("                } else {\r\n");
      out.write("                    var input = document.createElement('input');\r\n");
      out.write("                    input.setAttribute('type', 'text');\r\n");
      out.write("                    input.setAttribute('name', txt);\r\n");
      out.write("                    td4.appendChild(input);\r\n");
      out.write("                }\r\n");
      out.write("                td4.appendChild(document.createElement(\"br\"));\r\n");
      out.write("                td4.appendChild(document.createTextNode(\"Group\"));\r\n");
      out.write("                var chkbx1 = document.createElement('input');\r\n");
      out.write("                chkbx1.setAttribute('type', 'checkbox');\r\n");
      out.write("                chkbx1.setAttribute('name', txt + '_group');\r\n");
      out.write("                chkbx1.setAttribute('value', 'yes');\r\n");
      out.write("                td4.appendChild(chkbx1);\r\n");
      out.write("                td4.appendChild(document.createTextNode(\" | Option\"));\r\n");
      out.write("                var chkbx1 = document.createElement('input');\r\n");
      out.write("                chkbx1.setAttribute('type', 'checkbox');\r\n");
      out.write("                chkbx1.setAttribute('name', txt + '_option');\r\n");
      out.write("                chkbx1.setAttribute('value', 'yes');\r\n");
      out.write("                td4.appendChild(chkbx1);\r\n");
      out.write("                d.appendChild(td4);\r\n");
      out.write("\r\n");
      out.write("                /*Remove button*/\r\n");
      out.write("                var td5 = document.createElement('td');\r\n");
      out.write("                var rmBtn = document.createElement('img');\r\n");
      out.write("                rmBtn.setAttribute('name', 'rm_' + txt);\r\n");
      out.write("                rmBtn.setAttribute('src', 'https://cdn2.iconfinder.com/data/icons/color-svg-vector-icons-part-2/512/restricted_folder_symbol_stop-16.png');\r\n");
      out.write("                rmBtn.setAttribute('class', 'button');\r\n");
      out.write("                rmBtn.onclick = function(evt) {\r\n");
      out.write("                    var e = window.event || evt;\r\n");
      out.write("                    var xn = document.getElementById(e.target.getAttribute('name').substr(3, e.target.getAttribute('name').length));\r\n");
      out.write("                    xn.setAttribute('fill', 'white');\r\n");
      out.write("                    var p = e.target.parentNode.parentNode.parentNode;\r\n");
      out.write("                    e.target.parentNode.parentNode.parentNode.removeChild(e.target.parentNode.parentNode);\r\n");
      out.write("                    if (p.firstChild != null && p.firstChild.firstChild.firstChild.nodeName.toLowerCase() == 'select') {\r\n");
      out.write("                        p.firstChild.firstChild.removeChild(p.firstChild.firstChild.firstChild);\r\n");
      out.write("                    }\r\n");
      out.write("                    if (p.childNodes.length == 0) {\r\n");
      out.write("                        document.getElementById('searchform_submit').style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                td5.appendChild(rmBtn);\r\n");
      out.write("\r\n");
      out.write("                /*Key hidden field*/\r\n");
      out.write("                var key = document.createElement('input');\r\n");
      out.write("                key.setAttribute('type', 'hidden');\r\n");
      out.write("                key.setAttribute('name', 'fields');\r\n");
      out.write("                key.setAttribute('value', txt);\r\n");
      out.write("                td5.appendChild(key);\r\n");
      out.write("                d.appendChild(td5);\r\n");
      out.write("\r\n");
      out.write("                n.appendChild(d);\r\n");
      out.write("\r\n");
      out.write("                document.getElementById('searchform_submit').style.display = 'inline';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            var tmp_path = null;\r\n");
      out.write("            var tmp_classname = null;\r\n");
      out.write("            var tmp_level = null;\r\n");
      out.write("            var tmp_node = null;\r\n");
      out.write("\r\n");
      out.write("            function prepareRender(n, pth, str, lv) {\r\n");
      out.write("                tmp_path = pth;\r\n");
      out.write("                tmp_classname = str;\r\n");
      out.write("                tmp_level = lv;\r\n");
      out.write("                tmp_node = n;\r\n");
      out.write("                var httpObj = null;\r\n");
      out.write("                if (window.XMLHttpRequest) {\r\n");
      out.write("                    httpObj = new XMLHttpRequest();\r\n");
      out.write("                } else {\r\n");
      out.write("                    httpObj = ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("                }\r\n");
      out.write("                if (httpObj != null) {\r\n");
      out.write("                    document.getElementById('onto').style.opacity = 0.4;\r\n");
      out.write("                    httpObj.open('GET', 'subclass_check.jsp?class=' + str.replace(\"#\", \"%23\") + '&' + Math.random(), true);\r\n");
      out.write("                    httpObj.onreadystatechange = function() {\r\n");
      out.write("                        if (httpObj.readyState == 4 && httpObj.status == 200) {\r\n");
      out.write("                            document.getElementById('onto').style.opacity = 1.0;\r\n");
      out.write("                            var res = httpObj.responseText.trim();\r\n");
      out.write("                            if (res == \"1\") {\r\n");
      out.write("                                window.open('subclass_view.jsp?class=' + str.replace(\"#\", \"%23\"), 'subclass_view', 'width=400,height=600,status=no,titlebar=no,toolbar=no');\r\n");
      out.write("                            } else {\r\n");
      out.write("                                renderProperties(n, pth, str, lv);\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    };\r\n");
      out.write("                    httpObj.send(null);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function callRender(str) {\r\n");
      out.write("                var nds = tmp_node.childNodes;\r\n");
      out.write("                for (var i = 0; i < nds.length; i++) {\r\n");
      out.write("                    if (nds[i].nodeName == \"text\") {\r\n");
      out.write("                        nds[i].textContent = str.split(\"#\")[1];\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                renderProperties(tmp_node, tmp_path, str, tmp_level);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function renderProperties(n, pth, str, lv) {\r\n");
      out.write("                var httpObj = null;\r\n");
      out.write("                if (window.XMLHttpRequest) {\r\n");
      out.write("                    httpObj = new XMLHttpRequest();\r\n");
      out.write("                } else {\r\n");
      out.write("                    httpObj = ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("                }\r\n");
      out.write("                if (httpObj != null) {\r\n");
      out.write("                    var ont = document.getElementById('onto');\r\n");
      out.write("                    var gnd = document.getElementById('level' + lv);\r\n");
      out.write("                    if (gnd != null) {\r\n");
      out.write("                        gnd.parentNode.removeChild(gnd, true);\r\n");
      out.write("                    }\r\n");
      out.write("                    ont.style.opacity = 0.4;\r\n");
      out.write("                    var loadingN = document.getElementById('loading');\r\n");
      out.write("                    loadingN.style.display = 'block';\r\n");
      out.write("                    loadingN.style.left = (screen.width / 2) - 20;\r\n");
      out.write("                    loadingN.style.top = (screen.height / 2) - 20;\r\n");
      out.write("                    httpObj.open('POST', 'render_property.jsp?' + Math.random(), true);\r\n");
      out.write("                    httpObj.onreadystatechange = function() {\r\n");
      out.write("                        if (httpObj.readyState == 4 && httpObj.status == 200) {\r\n");
      out.write("                            ont.style.opacity = 1.0;\r\n");
      out.write("                            loadingN.style.display = 'none';\r\n");
      out.write("                            var json = JSON.parse(httpObj.responseText);\r\n");
      out.write("                            var props = json.properties;\r\n");
      out.write("                            var ypos = 0;\r\n");
      out.write("                            var g = document.createElementNS(\"http://www.w3.org/2000/svg\", 'g');\r\n");
      out.write("                            g.setAttribute(\"id\", \"level\" + lv);\r\n");
      out.write("                            var ncls = (n.childNodes[0].nodeName == \"ellipse\") ? n.childNodes[0] : n.childNodes[1];\r\n");
      out.write("                            for (i = 0; i < props.length; i++) {\r\n");
      out.write("                                if (props[i].type != \"object\") {\r\n");
      out.write("                                    var xpos = ncls.cx.baseVal.value + 185;\r\n");
      out.write("                                    var ypos = ypos + 20;\r\n");
      out.write("                                    var ycls = (ncls.cy.baseVal.value);\r\n");
      out.write("                                    var line = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\r\n");
      out.write("                                    line.setAttribute(\"stroke\", \"black\");\r\n");
      out.write("                                    line.setAttribute(\"fill\", \"none\");\r\n");
      out.write("                                    line.setAttribute(\"d\", \"M \" + (xpos - 145) + \" \" + ycls + \" C \" + (xpos) + \" \" + ycls + \" \" + (xpos - 145) + \" \" + ypos + \" \" + (xpos) + \" \" + ypos);\r\n");
      out.write("                                    g.appendChild(line);\r\n");
      out.write("                                    var arr = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\r\n");
      out.write("                                    arr.setAttribute(\"stroke\", \"black\");\r\n");
      out.write("                                    arr.setAttribute(\"fill\", \"none\");\r\n");
      out.write("                                    arr.setAttribute(\"d\", \"M \" + (xpos - 5) + \" \" + (ypos - 5) + \" l 10 5 l -10 5\");\r\n");
      out.write("                                    g.appendChild(arr);\r\n");
      out.write("                                    var cir = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n");
      out.write("                                    cir.setAttribute(\"id\", pth + \"->\" + str.split(\"#\")[1] + \"->\" + props[i].name.split(\"#\")[1]);\r\n");
      out.write("                                    cir.setAttribute(\"class\", \"button dataproperty\");\r\n");
      out.write("                                    cir.setAttribute(\"stroke\", \"black\");\r\n");
      out.write("                                    cir.setAttribute(\"fill\", \"white\");\r\n");
      out.write("                                    cir.setAttribute(\"r\", \"5\");\r\n");
      out.write("                                    cir.setAttribute(\"cx\", xpos + 5);\r\n");
      out.write("                                    cir.setAttribute(\"cy\", ypos);\r\n");
      out.write("                                    cir.setAttribute(\"onclick\", \"this.setAttribute('fill','red');insertTextinput('\" + pth + \"->\" + str.split(\"#\")[1] + \"->\" + props[i].name.split(\"#\")[1] + \"^^\" + props[i].type.replace(/'/g, \"\\\"\") + \"');\");\r\n");
      out.write("                                    g.appendChild(cir);\r\n");
      out.write("                                    var txt = document.createElementNS(\"http://www.w3.org/2000/svg\", 'text');\r\n");
      out.write("                                    txt.setAttribute(\"x\", xpos + 11);\r\n");
      out.write("                                    txt.setAttribute(\"y\", ypos + 6);\r\n");
      out.write("                                    txt.appendChild(document.createTextNode(props[i].name.split(\"#\")[1]));\r\n");
      out.write("                                    g.appendChild(txt);\r\n");
      out.write("                                } else {\r\n");
      out.write("                                    var xpos = ncls.cx.baseVal.value + 245;\r\n");
      out.write("                                    var ypos = ypos + 45;\r\n");
      out.write("                                    var ycls = (ncls.cy.baseVal.value);\r\n");
      out.write("                                    var line = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\r\n");
      out.write("                                    line.setAttribute(\"id\", props[i].name.split(\"#\")[1]);\r\n");
      out.write("                                    line.setAttribute(\"class\", \"objectproperty\");\r\n");
      out.write("                                    line.setAttribute(\"stroke\", \"black\");\r\n");
      out.write("                                    line.setAttribute(\"stroke-width\", \"3\");\r\n");
      out.write("                                    line.setAttribute(\"fill\", \"none\");\r\n");
      out.write("                                    line.setAttribute(\"d\", \"M \" + (xpos - 205) + \" \" + ycls + \" C \" + (xpos - 70) + \" \" + ycls + \" \" + (xpos - 205) + \" \" + ypos + \" \" + (xpos) + \" \" + ypos);\r\n");
      out.write("                                    line.setAttribute(\"onmouseover\", \"var e = evt || event;showpopup(this, e);\");\r\n");
      out.write("                                    line.setAttribute(\"onmouseout\", \"hidepopup();\");\r\n");
      out.write("                                    g.appendChild(line);\r\n");
      out.write("                                    var arr = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\r\n");
      out.write("                                    arr.setAttribute(\"stroke\", \"black\");\r\n");
      out.write("                                    arr.setAttribute(\"stroke-width\", \"3\");\r\n");
      out.write("                                    arr.setAttribute(\"fill\", \"none\");\r\n");
      out.write("                                    arr.setAttribute(\"d\", \"M \" + (xpos - 5) + \" \" + (ypos - 5) + \" l 10 5 l -10 5\");\r\n");
      out.write("                                    g.appendChild(arr);\r\n");
      out.write("                                    var sg = document.createElementNS(\"http://www.w3.org/2000/svg\", 'g');\r\n");
      out.write("                                    var cir = document.createElementNS(\"http://www.w3.org/2000/svg\", 'ellipse');\r\n");
      out.write("                                    cir.setAttribute(\"class\", \"button\");\r\n");
      out.write("                                    cir.setAttribute(\"stroke\", \"blue\");\r\n");
      out.write("                                    cir.setAttribute(\"fill\", \"lightgray\");\r\n");
      out.write("                                    cir.setAttribute(\"rx\", \"40\");\r\n");
      out.write("                                    cir.setAttribute(\"ry\", \"20\");\r\n");
      out.write("                                    cir.setAttribute(\"cx\", xpos + 40);\r\n");
      out.write("                                    cir.setAttribute(\"cy\", ypos);\r\n");
      out.write("                                    cir.setAttribute(\"onclick\", \"prepareRender(this.parentNode, '\" + pth + \"->\" + str.split(\"#\")[1] + \"->\" + props[i].name.split(\"#\")[1] + \"', '\" + props[i].range + \"',\" + (lv + 1) + \");\");\r\n");
      out.write("                                    sg.appendChild(cir);\r\n");
      out.write("                                    var txt = document.createElementNS(\"http://www.w3.org/2000/svg\", 'text');\r\n");
      out.write("                                    txt.setAttribute(\"class\", \"button\");\r\n");
      out.write("                                    txt.setAttribute(\"x\", xpos + 15);\r\n");
      out.write("                                    txt.setAttribute(\"y\", ypos + 5);\r\n");
      out.write("                                    txt.appendChild(document.createTextNode(props[i].range.split(\"#\")[1]));\r\n");
      out.write("                                    txt.setAttribute(\"onclick\", \"prepareRender(this.parentNode, '\" + pth + \"->\" + str.split(\"#\")[1] + \"->\" + props[i].name.split(\"#\")[1] + \"', '\" + props[i].range + \"',\" + (lv + 1) + \");\");\r\n");
      out.write("                                    sg.appendChild(txt);\r\n");
      out.write("                                    g.appendChild(sg);\r\n");
      out.write("                                }\r\n");
      out.write("                                n.appendChild(g);\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    httpObj.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n");
      out.write("                    httpObj.send('clsname=' + str);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("    </HEAD>\r\n");
      out.write("\r\n");
      out.write("    <BODY>\r\n");
      out.write("        ");
      out.write("<!--\r\n");
      out.write("To change this template, choose Tools | Templates\r\n");
      out.write("and open the template in the editor.\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<div class=\"header menubar\">\r\n");
      out.write("    <div class=\"search_holder right\"><input class=\"short\" type=\"text\" placeholder=\"Search site\"/><input type=\"button\" class=\"button search\"/></div>\r\n");
      out.write("    <div class=\"headline left\">\r\n");
      out.write("        <h1 class=\"title\">Healthcare Information Center</h1>\r\n");
      out.write("        <h2 class=\"subtitle left right_radius\">Nongbuarawae Hospital</h2>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"menu left left_radius\" onclick=\"window.location.href = 'index.jsp';\">Home</div>\r\n");
      out.write("    <div class=\"menu left right_radius\" onclick=\"window.location.href = 'semantic_search.jsp';\">Search & Analytics</div>\r\n");
      out.write("</div>\r\n");
      out.write("        \r\n");
      out.write("        <img id=\"loading\" src=\"images/loading.gif\" style=\"display:none;position:absolute;z-index: 1;\"/>\r\n");
      out.write("        <table id=\"main_container\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <a href=\"#\" onclick=\"showonto();\">Search Patient By:</a>\r\n");
      out.write("                    <form id=\"searchform\" action=\"semantic_search_submit.jsp\" method=\"post\"><table id=\"searchform_table\"></table><button id=\"searchform_submit\" style=\"display:none;\" onclick=\"document.getElementById('searchform').submit();\">Submit</button></form>\r\n");
      out.write("                </td>\r\n");
      out.write("                <td style=\"width:80%;\">\r\n");
      out.write("            <svg id=\"onto\" class=\"animation\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\">\r\n");
      out.write("\t\t\t<g id=\"viewport\" transform=\"translate(0,0)\">\r\n");
      out.write("                ");

                    int ycls = (20 * lst.size()) / 2;

                    int xpos = 185;
                    int ypos = 0;
                    for (RDFProperty p : lst) {
                
      out.write("\r\n");
      out.write("                <!--Class-->\r\n");
      out.write("                <ellipse cx=\"50\" cy=\"");
      out.print(ycls);
      out.write("\" rx=\"40\" ry=\"20\" stroke=\"blue\" stroke-width=\"1\" fill=\"lightgray\"/>\r\n");
      out.write("                <text x=\"20\" y=\"");
      out.print((ycls + 5));
      out.write("\">Patient</text>\r\n");
      out.write("                    ");

                        if (p.getRDFType().getURI().equals("http://www.w3.org/2002/07/owl#DatatypeProperty")) {
                            ypos += 20;

                            String drangeStr = "";
                            RDFResource drange = p.getRange();
                            if (drange != null) {
                                Object obj = drange.getPropertyValue(jowl.onto.getRDFProperty("http://www.w3.org/2002/07/owl#oneOf"));
                                if (obj != null) {
                                    DefaultRDFList rlst = (DefaultRDFList) obj;
                                    for (Object v : rlst.getValues()) {
                                        drangeStr += (drangeStr.equals("")) ? "&quot;" + v.toString() + "&quot;" : ",&quot;" + v.toString() + "&quot;";
                                    }
                                }

                            }

                            String ptype = "string";
                            if (p.getRangeDatatype() != null) {
                                ptype = p.getRangeDatatype().getLocalName();
                            }
                            if (!drangeStr.equals("")) {
                                ptype = "{&quot;enum&quot;:[" + drangeStr + "]}";
                            }
                    
      out.write("\r\n");
      out.write("                <!--Datatype Property-->\r\n");
      out.write("                <path d=\"M 90 ");
      out.print(ycls);
      out.write(' ');
      out.write('C');
      out.write(' ');
      out.print(xpos);
      out.write(' ');
      out.print(ycls);
      out.write(" 90 ");
      out.print(ypos);
      out.write(' ');
      out.print(xpos);
      out.write(' ');
      out.print(ypos);
      out.write("\" stroke=\"black\" fill=\"none\"/>\r\n");
      out.write("                <path d=\"M ");
      out.print((xpos - 5));
      out.write(' ');
      out.print((ypos - 5));
      out.write(" l 10 5 l -10 5\" stroke=\"black\" fill=\"none\"/>\r\n");
      out.write("                <circle id=\"Patient->");
      out.print(p.getLocalName());
      out.write("\" class=\"button dataproperty\" cx=\"");
      out.print((xpos + 5));
      out.write("\" cy=\"");
      out.print(ypos);
      out.write("\" r=\"5\" stroke=\"black\"fill=\"white\" onclick=\"this.setAttribute('fill', 'red');\r\n");
      out.write("                insertTextinput('Patient->");
      out.print(p.getLocalName());
      out.write('^');
      out.write('^');
      out.print(ptype);
      out.write("');\"/>\r\n");
      out.write("                <text x=\"");
      out.print((xpos + 11));
      out.write("\" y=\"");
      out.print((ypos + 6));
      out.write('"');
      out.write('>');
      out.print(p.getLocalName());
      out.write("</text>\r\n");
      out.write("                    ");

                    } else {
                        ypos += 45;
                    
      out.write("\r\n");
      out.write("                <!--Object Property-->\r\n");
      out.write("                <path id=\"");
      out.print(p.getLocalName());
      out.write("\" class=\"objectproperty\" d=\"M 90 ");
      out.print(ycls);
      out.write(' ');
      out.write('C');
      out.write(' ');
      out.print((xpos - 40));
      out.write(' ');
      out.print(ycls);
      out.write(" 90 ");
      out.print(ypos);
      out.write(' ');
      out.print((xpos + 90));
      out.write(' ');
      out.print(ypos);
      out.write("\" stroke-width=\"3\" stroke=\"black\" fill=\"none\" onmouseover=\"var e = evt || event;\r\n");
      out.write("                showpopup(this, e);\" onmouseout=\"hidepopup();\"/>\r\n");
      out.write("                <path d=\"M ");
      out.print((xpos + 85));
      out.write(' ');
      out.print((ypos - 5));
      out.write(" l 10 5 l -10 5\" stroke-width=\"3\" stroke=\"black\" fill=\"none\"/>\r\n");
      out.write("                <!--Class Obj-->\r\n");
      out.write("                ");

                    RDFSClass cc = jowl.getRangesOf(p).get(0);
                
      out.write("\r\n");
      out.write("                <g>\r\n");
      out.write("                    <ellipse class=\"button\" onclick=\"prepareRender(this.parentNode, 'Patient->");
      out.print(p.getLocalName());
      out.write("', '");
      out.print(cc.getName());
      out.write("', 2);\" cx=\"");
      out.print((xpos + 130));
      out.write("\" cy=\"");
      out.print(ypos);
      out.write("\" rx=\"40\" ry=\"20\" stroke=\"blue\" stroke-width=\"1\" fill=\"lightgray\"/>\r\n");
      out.write("                    <text class=\"button\" onclick=\"prepareRender(this.parentNode, 'Patient->");
      out.print(p.getLocalName());
      out.write("', '");
      out.print(cc.getName());
      out.write("', 2);\" x=\"");
      out.print((xpos + 100));
      out.write("\" y=\"");
      out.print(ypos + 5);
      out.write('"');
      out.write('>');
      out.print(cc.getLocalName());
      out.write("</text>\r\n");
      out.write("                </g>\r\n");
      out.write("                ");

                        }
                    }
                
      out.write("\r\n");
      out.write("\t\t\t</g>\r\n");
      out.write("            </svg>\r\n");
      out.write("        </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<!--SPARQL Save Form-->\r\n");

 if(session.getAttribute("username")!=null){
	SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	String dt = formatter.format(new Date());

      out.write("\r\n");
      out.write("<form style=\"display:block;width:100%;\" class=\"left\" id=\"save_analytic\" name=\"save_result\" action=\"semantic_search_analytic_save.jsp\" method=\"post\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"datetime\" value=\"");
      out.print(dt);
      out.write("\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"username\" value=\"");
      out.print(session.getAttribute("username"));
      out.write("\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"label\" value=\"\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"action\" value=\"insert\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"table\" value=\"analytic\"/>\r\n");
      out.write("\t<h3>Main SPARQL</h3>\r\n");
      out.write("\t<textarea class=\"show\" name=\"sparql\">prefix dom:   &lt;http:&#47;&#47;202.28.94.50&#47;ontologies&#47;healthcare&#47;hl7.owl#&gt;\r\n");
      out.write("prefix co:   &lt;http:&#47;&#47;202.28.94.50&#47;ontologies&#47;healthcare&#47;co.owl#&gt;\r\n");
      out.write("prefix rdfs: &lt;http:&#47;&#47;www.w3.org&#47;2000&#47;01&#47;rdf-schema#&gt;\r\n");
      out.write("prefix rdf:  &lt;http:&#47;&#47;www.w3.org&#47;1999&#47;02&#47;22-rdf-syntax-ns#&gt;\r\n");
      out.write("prefix owl:  &lt;http:&#47;&#47;www.w3.org&#47;2002&#47;07&#47;owl#&gt;\r\n");
      out.write("prefix xsd:  &lt;http:&#47;&#47;www.w3.org&#47;2001&#47;XMLSchema#&gt;\r\n");
      out.write("\t</textarea>\r\n");
      out.write("\t<textarea style=\"display:none;\" name=\"jsonform\"></textarea>\r\n");
      out.write("\t<h4>Count label</h4>\r\n");
      out.write("\t<input type=\"text\" name=\"sparql_label\"/>\r\n");
      out.write("\t<h3>Summation</h3>\r\n");
      out.write("\t<h4>Summation label</h4>\r\n");
      out.write("\t<input name=\"summation_label\" type=\"text\"/>\r\n");
      out.write("\t<div class=\"summation-block\">\r\n");
      out.write("\t\t<h4>Summation SPARQL</h4>\r\n");
      out.write("\t\t<textarea class=\"show\" name=\"sparql_summation\"></textarea>\r\n");
      out.write("\t\t<h4>Summation count label</h4>\r\n");
      out.write("\t\t<input type=\"text\" name=\"sparql_summation_label\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t<h4>Summation SPARQL</h4>\r\n");
      out.write("\t\t<textarea class=\"show\" name=\"sparql_summation\"></textarea>\r\n");
      out.write("\t\t<h4>Summation count label</h4>\r\n");
      out.write("\t\t<input type=\"text\" name=\"sparql_summation_label\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<hr/>\r\n");
      out.write("\t<h3>Comparative</h3>\r\n");
      out.write("\t<h4>Compare order label</h4>\r\n");
      out.write("\t<input type=\"text\" name=\"compare_order_label\"/>\r\n");
      out.write("\t<div class=\"comparative-block\">\r\n");
      out.write("\t\t<h4>Compare order SPARQL</h4>\r\n");
      out.write("\t\t<textarea class=\"show\" name=\"sparql_compare_order\"></textarea>\r\n");
      out.write("\t\t<h4>Compare order count label</h4>\r\n");
      out.write("\t\t<input type=\"text\" name=\"sparql_compare_order_label\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form><a class=\"butt\" href=\"#\" onclick=\"window.open('semantic_search_setlabel.jsp', 'Set_label', 'width=450,height=150');\"><img src=\"images/save-ico.png\" style=\"width:16px;height:16px;\"/><span>Save Analytic</span></a>\r\n");
}
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tsvgHeight = ");
      out.print(ypos + 30);
      out.write(";\r\n");
      out.write("\tshowonto();\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"jslibraries/SVGPan.js\"></script>\r\n");
      out.write("<div id=\"popup\" class=\"popup\" style=\"position:absolute;display:none;\"></div>\r\n");
      out.write("</BODY>\r\n");
      out.write("<script type=\"text/javascript\" src=\"jslibraries/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tshowonto();\r\n");
      out.write("\t$(\"form\").find(\"input\").css(\"width\",\"100%\");\r\n");
      out.write("\t$(\"form\").find(\"textarea.show\").css(\"width\",\"100%\");\r\n");
      out.write("\t$(\"form\").find(\"textarea.show\").css(\"height\",\"250px\");\r\n");
      out.write("</script>\r\n");
      out.write("</HTML>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
