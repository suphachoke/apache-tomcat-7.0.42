/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2015-12-29 06:54:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.configuration;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Properties;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>SIDI System - Configuration</title>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"../css-style1.css\"/>\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            #steps-indicator li{padding:10px;padding-left: 32px;}\n");
      out.write("            .index{\n");
      out.write("                background:url(https://cdn2.iconfinder.com/data/icons/color-svg-vector-icons-part-2/512/shift_right_arrow_next-32.png) left no-repeat;\n");
      out.write("                color:orange;\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("            #steps-form{\n");
      out.write("                margin-left: 32px;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            function init() {\n");
      out.write("                var n = document.getElementById('steps-indicator');\n");
      out.write("                var nds = n.childNodes;\n");
      out.write("                for (var i = 0; i < nds.length; i++) {\n");
      out.write("                    if (nds[i].nodeName.toLowerCase() == 'li') {\n");
      out.write("                        nds[i].setAttribute(\"onmouseover\", \"this.style.color='orange';\");\n");
      out.write("                        nds[i].setAttribute(\"onmouseout\", \"this.style.color='black';\");\n");
      out.write("                        nds[i].setAttribute(\"onclick\", \"stepMove(this);\");\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function stepMove(n) {\n");
      out.write("                var p = n.parentNode;\n");
      out.write("                var nds = p.childNodes;\n");
      out.write("                for (var i = 0; i < nds.length; i++) {\n");
      out.write("                    if (nds[i].nodeName.toLowerCase() == 'li') {\n");
      out.write("                        nds[i].setAttribute(\"class\", \"button left\");\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                n.setAttribute(\"class\", \"button left index\");\n");
      out.write("                var f = document.getElementById('steps-form');\n");
      out.write("                var fns = f.childNodes;\n");
      out.write("                for (var i = 0; i < fns.length; i++) {\n");
      out.write("                    if (fns[i].nodeName.toLowerCase() == 'table') {\n");
      out.write("                        fns[i].style.display = 'none';\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                document.getElementById(n.getAttribute('id') + \"-entry\").style.display = 'table';\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("    ");

        Properties props = new Properties();
        props.load(getServletContext().getResourceAsStream("/WEB-INF/config.properties"));
    
      out.write("    \n");
      out.write("    <body onload=\"init();\">\n");
      out.write("        <div id=\"header\">\n");
      out.write("            <h1>SIDI System - Configuration</h1>\n");
      out.write("        </div>\n");
      out.write("        <ul id=\"steps-indicator\">\n");
      out.write("            <li id=\"step1\" class=\"button left index\">Step 1: SIDI Configuration</li>\n");
      out.write("            <li id=\"step2\" class=\"button left\">Step 2: MySQL Configuration</li>\n");
      out.write("            <li id=\"step3\" class=\"button left\">Step 3: Finished</li>\n");
      out.write("        </ul>\n");
      out.write("        <form id=\"steps-form\" action=\"server_config.jsp\" method=\"post\">\n");
      out.write("            <table id=\"step1-entry\" class=\"clearleft\">\n");
      out.write("                <tr><th>SIDI Directory</th><td><input class=\"double\" type=\"text\" name=\"sidi_path\" value=\"");
      out.print(props.getProperty("sidi_path"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Domain Ontology (lite)</th><td><input class=\"double\" type=\"text\" name=\"domain_ontology\" value=\"");
      out.print(props.getProperty("domain_ontology"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Common Ontology</th><td><input class=\"double\" type=\"text\" name=\"common_ontology\" value=\"");
      out.print(props.getProperty("common_ontology"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>WSs Repository</th><td><input class=\"double\" type=\"text\" name=\"ws_repository\" value=\"");
      out.print(props.getProperty("ws_repository"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Reasoning Rules</th><td><input class=\"double\" type=\"text\" name=\"rules_file\" value=\"");
      out.print(props.getProperty("rules_file"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Listing Patient Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"listby_citizen_id_service\" value=\"");
      out.print(props.getProperty("listby_citizen_id_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Listing Patient Service (Name)</th><td><input class=\"double\" type=\"text\" name=\"listby_given_name_service\" value=\"");
      out.print(props.getProperty("listby_given_name_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <!--<tr><th>Listing Patient Service (HN)</th><td><input class=\"double\" type=\"text\" name=\"listby_patient_code_service\" value=\"");
      out.print(props.getProperty("listby_patient_code_service"));
      out.write("\"/></td></tr>-->\n");
      out.write("                <tr><th>Selecting Patient Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"select_patient_service\" value=\"");
      out.print(props.getProperty("select_patient_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Physical Exam. Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"physical_exam_service\" value=\"");
      out.print(props.getProperty("physical_exam_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Diagnosis Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"diagnosis_service\" value=\"");
      out.print(props.getProperty("diagnosis_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Laboratory Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"laboratory_service\" value=\"");
      out.print(props.getProperty("laboratory_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Vaccination Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"vaccination_service\" value=\"");
      out.print(props.getProperty("vaccination_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Pregnancy Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"pregnancy_service\" value=\"");
      out.print(props.getProperty("pregnancy_service"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Drug Service (Citizen ID)</th><td><input class=\"double\" type=\"text\" name=\"drug_prescription_service\" value=\"");
      out.print(props.getProperty("drug_prescription_service"));
      out.write("\"/></td></tr>\n");
      out.write("            </table>\n");
      out.write("            <table id=\"step2-entry\" class=\"clearleft\" style=\"display:none;\">\n");
      out.write("                <tr><th>Database Name</th><td><input class=\"double\" type=\"text\" name=\"db_name\" value=\"");
      out.print(props.getProperty("db_name"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Database User</th><td><input type=\"text\" name=\"db_user\" value=\"");
      out.print(props.getProperty("db_user"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Database Password</th><td><input type=\"text\" name=\"db_pass\" value=\"");
      out.print(props.getProperty("db_pass"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Bigdata Host</th><td><input type=\"text\" name=\"rdf_host\" value=\"");
      out.print(props.getProperty("rdf_host"));
      out.write("\"/></td></tr>\n");
      out.write("                <tr><th>Bigdata Port</th><td><input type=\"text\" name=\"rdf_port\" value=\"");
      out.print(props.getProperty("rdf_port"));
      out.write("\"/></td></tr>\n");
      out.write("            </table>\n");
      out.write("            <table id=\"step3-entry\" class=\"clearleft\" style=\"display:none;\">\n");
      out.write("                <tr><td colspan=\"2\"><button>Save</button></td></tr>\n");
      out.write("            </table>\n");
      out.write("        </form>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
