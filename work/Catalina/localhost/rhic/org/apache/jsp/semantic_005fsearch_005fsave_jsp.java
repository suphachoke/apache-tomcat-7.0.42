/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2016-01-15 05:27:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Statement;
import java.util.Properties;
import java.sql.DriverManager;
import java.sql.Connection;

public final class semantic_005fsearch_005fsave_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/updateDB.jsp", Long.valueOf(1451371346614L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
 request.setCharacterEncoding("UTF-8");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            #notify {\n");
      out.write("                border:1px solid black;\n");
      out.write("                border-radius: 5pt;\n");
      out.write("                margin:0 auto;\n");
      out.write("                width:300px;\n");
      out.write("                padding:20px;\n");
      out.write("                text-align: center;\n");
      out.write("                overflow: visible;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Properties props = new Properties();
    props.load(getServletContext().getResourceAsStream("/WEB-INF/config.properties"));

    String outmsg = "";
    String values = "";
    String ins_value = "";
    String ins_key = "";
    request.setCharacterEncoding("UTF-8");
    for (Object key : request.getParameterMap().keySet()) {
        if (!key.equals("key") && !key.equals("table") && !key.equals("action") && !key.equals("redirect")) {
            String v = (key.equals("password")) ? "md5('" + request.getParameter(key.toString()) + "')" : "'" + request.getParameter(key.toString()) + "'";
            if (!request.getParameter(key.toString()).equals("")) {
                values += (values.equals("")) ? key + "='" + request.getParameter(key.toString()) + "'" : "," + key + "=" + v + "";
            }
            ins_key += (ins_key.equals("")) ? key : "," + key;
            ins_value += (ins_value.equals("")) ? v : "," + v;
        }
    }
    try {
        Class.forName("com.mysql.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + props.getProperty("db_name"), props.getProperty("db_user"), props.getProperty("db_pass"));
        Statement stmt = conn.createStatement();
        stmt.execute("SET NAMES UTF8");
        if (request.getParameter("action") != null && request.getParameter("action").equals("insert")) {
            stmt.execute("insert into " + request.getParameter("table") + " (" + ins_key + ") values (" + ins_value + ")");
        } else {
            stmt.executeUpdate("update " + request.getParameter("table") + " set " + values + " where " + request.getParameter("key") + "='" + request.getParameter(request.getParameter("key")) + "'");
        }
        outmsg = "<h4>บันทึกข้อมูลสำเร็จ</h4>";
    } catch (Exception e) {
        outmsg = "<h4>บันทึกข้อมูลล้มเหลว</h4><p>" + e.getMessage() + "</p>";
    }
    if (request.getParameter("redirect") != null) {
        out.print(outmsg);
        out.print("<script type=\"text/javascript\">window.location.href = '" + request.getParameter("redirect") + "';</script>");
    }

      out.write("\n");
      out.write("        <div id=\"notify\">\n");
      out.write("            ");
      out.print(outmsg);
      out.write("\n");
      out.write("            <button type=\"button\" onclick=\"window.location.href = 'analytic.jsp';\">BACK</button>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
